module ietf-alto-stats {
  yang-version 1.1;
  namespace "urn:ietf:params:xml:ns:yang:ietf-alto-stats";
  prefix alto-stats;

  import ietf-yang-types {
    prefix yang;
    reference
      "RFC 6991: Common YANG Data Types";
  }
  import ietf-alto {
    prefix alto;
    reference
      "RFC XXXX: YANG Data Models for the Application-Layer
                 Traffic Optimization (ALTO) Protocol";
  }

  organization
    "IETF ALTO Working Group";
  contact
    "WG Web:   <https://datatracker.ietf.org/wg/alto/about/>
     WG List:  <alto@ietf.org>";
  description
    "This YANG module defines a set of statistics of an ALTO
     server instance.

     Copyright (c) 2023 IETF Trust and the persons identified as
     authors of the code.  All rights reserved.

     Redistribution and use in source and binary forms, with or
     without modification, is permitted pursuant to, and subject to
     the license terms contained in, the Revised BSD License set
     forth in Section 4.c of the IETF Trust's Legal Provisions
     Relating to IETF Documents
     (https://trustee.ietf.org/license-info).

     This version of this YANG module is part of RFC XXXX
     (https://www.rfc-editor.org/info/rfcXXXX); see the RFC itself
     for full legal notices.";

  revision 2023-02-23 {
    description
      "Initial Version.";
    reference
      "RFC XXXX: YANG Data Models for the Application-Layer
                 Traffic Optimization (ALTO) Protocol";
  }

  // Groupings

  grouping server-level-stats {
    description
      "This grouping defines statistics for server-level monitoring";
    leaf discontinuity-time {
      type yang:timestamp;
      description
        "The time on the most recent occasion at which the ALTO
         server suffered a discontinuity. This must be initialized
         when the ALTO server is configured or rebooted.";
    }
    leaf last-report-time {
      type yang:timestamp;
      description
        "The time on the most recent occasion at which the statistics
         are reported.";
    }
    leaf num-total-req {
      type yang:counter64;
      description
        "The total number of ALTO requests received by the ALTO
         server.";
    }
    leaf num-total-succ {
      type yang:counter64;
      description
        "The total number of successful responses sent by the ALTO
         server.";
    }
    leaf num-total-fail {
      type yang:counter64;
      description
        "The total number of failed responses sent by the ALTO
         server.";
    }
    leaf num-total-last-req {
      type yang:gauge64;
      description
        "The total number of ALTO requests received by the server
         within the last time window.";
    }
    leaf num-total-last-succ {
      type yang:gauge64;
      description
        "The total number of successful responses sent by the ALTO
         server within the last time window.";
    }
    leaf num-total-last-fail {
      type yang:gauge64;
      description
        "The total number of failed responses sent by the ALTO
         server within the last time window.";
    }
  }

  grouping resource-level-stats {
    description
      "This grouping defines statistics for resource-level monitoring";
    leaf discontinuity-time {
      type yang:timestamp;
      description
        "The time on the most recent occasion at which the ALTO
         service providing the information resource suffered a
         discontinuity. This must be initialized when the ALTO
         information resource is configured or the ALTO server is
         rebooted.";
    }
    leaf last-report-time {
      type yang:timestamp;
      description
        "The time on the most recent occasion at which the statistics
         are reported.";
    }
    leaf num-res-upd {
      type yang:counter64;
      description
        "The number of version updates since the information resource
         was created.";
    }
    leaf res-mem-size {
      type uint64;
      units "bytes";
      description
        "Memory size utilized by the information resource.";
    }
    leaf res-enc-size {
      type uint64;
      units "bytes";
      description
        "Size of JSON encoded data of the information resource.";
    }
    leaf num-res-req {
      type yang:counter64;
      description
        "The number of ALTO requests to this information resource.";
    }
    leaf num-res-succ {
      type yang:counter64;
      description
        "The number of successful responses for requests to this
         information resource.";
    }
    leaf num-res-fail {
      type yang:counter64;
      description
        "The total number of failed responses for requests to this
         information resource.";
    }
    leaf num-map-pid {
      when 'derived-from-or-self(../../alto:resource-type,'
         + '"alto:network-map")';
      type yang:gauge64;
      description
        "Number of PIDs contained by the network map.";
    }
    leaf num-map-entry {
      when 'derived-from-or-self(../../alto:resource-type,'
         + '"alto:endpoint-prop") or '
         + 'derived-from-or-self(../../alto:resource-type,'
         + '"alto:property-map")';
      type yang:gauge64;
      description
        "Number of ALTO entities contained by the property map.";
    }
    leaf num-base-obj {
      when 'derived-from-or-self(../../alto:resource-type,'
         + '"alto:cdni")';
      type yang:gauge64;
      description
        "Number of base CDNi advertisement objects contained by the
         CDNI resource.";
    }
    leaf num-upd-sess {
      when 'derived-from-or-self(../../alto:resource-type,'
         + '"alto:update")';
      type yang:gauge64;
      description
        "Number of sessions connected to the incremental update
         service.";
    }
    leaf num-event-total {
      when 'derived-from-or-self(../../alto:resource-type,'
         + '"alto:update")';
      type yang:gauge64;
      description
        "Total number of update events sent to all the connected
         clients.";
    }
    leaf num-event-max {
      when 'derived-from-or-self(../../alto:resource-type,'
         + '"alto:update")';
      type yang:gauge64;
      description
        "The maximum number of update events sent to the connected
         clients.";
    }
    leaf num-event-min {
      when 'derived-from-or-self(../../alto:resource-type,'
         + '"alto:update")';
      type yang:gauge64;
      description
        "The minimum number of update events sent to the connected
         clients.";
    }
    leaf num-event-avg {
      when 'derived-from-or-self(../../alto:resource-type,'
         + '"alto:update")';
      type yang:gauge64;
      description
        "The average number of update events sent by the ALTO server
         to the connected clients.";
    }
  }

  // Augment modules to add statistics

  augment "/alto:alto/alto:alto-server" {
    description
      "Augmenting statistics and configuration parameters for
       server-level monitoring.";
    container server-level-monitor-config {
      description
        "Configuration parameters for server-level monitoring.";
      leaf time-window-size {
        type uint32;
        units "seconds";
        default "300";
        description
          "Duration of the time window within that the statistics are
           reported.";
      }
    }
    container server-level-stats {
      config false;
      description
        "Top-level statistics for the whole ALTO server.";
      uses server-level-stats;
    }
  }

  augment "/alto:alto/alto:alto-server/alto:resource" {
    description
      "Augmenting statistics and configuration parameters for
       resource-level monitoring.";
    container resource-level-stats {
      config false;
      description
        "Common statistics for each information resource.";
      uses resource-level-stats;
    }
  }
}
